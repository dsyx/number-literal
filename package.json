{
  "name": "number-literal",
  "displayName": "Number Literal",
  "description": "A VSCode extension that can convert/hover different representations of Number Literal.",
  "icon": "resources/icons/logo.png",
  "version": "1.0.0",
  "publisher": "dsyx",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/dsyx/vsc-number-literal.git"
  },
  "engines": {
    "vscode": "^1.64.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "number",
    "hover",
    "converter"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "number-literal.convertToBinary",
        "title": "Number Literal: Convert to Binary"
      },
      {
        "command": "number-literal.convertToOctal",
        "title": "Number Literal: Convert to Octal"
      },
      {
        "command": "number-literal.convertToDecimal",
        "title": "Number Literal: Convert to Decimal"
      },
      {
        "command": "number-literal.convertToHexadecimal",
        "title": "Number Literal: Convert to Hexadecimal"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.64.0",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^5.1.3",
    "ts-loader": "^9.4.3",
    "webpack": "^5.85.0",
    "webpack-cli": "^5.1.1",
    "@vscode/test-electron": "^2.3.2"
  }
}